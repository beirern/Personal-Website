---
import { getCollection } from 'astro:content';
import FormattedDate from './FormattedDate.astro';

// Get recent blog posts (limit to 3)
const allPosts = await getCollection('posts');
const isDev = import.meta.env.DEV;

const recentPosts = allPosts
  .filter(post => isDev || (!post.data.draft && !post.data.invisible))
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, 3);

function createExcerpt(content: string, maxLength: number = 150) {
  const stripped = content.replace(/[#*`\[\]()]/g, '');
  return stripped.length > maxLength 
    ? stripped.substring(0, maxLength) + '...' 
    : stripped;
}
---

<section class="section">
  <div class="container">
    <h2 class="section-title">Recent Posts</h2>
    
    {recentPosts.length > 0 ? (
      <div class="posts-grid">
        {recentPosts.map((post) => (
          <article class="post-card">
            <div class="post-header">
              <h3 class="post-title">
                <a href={`/posts/${post.slug}`}>{post.data.title}</a>
              </h3>
              <div class="post-meta">
                <FormattedDate date={post.data.date} />
              </div>
            </div>
            
            <div class="post-excerpt" set:html={createExcerpt(post.body)} />
            
            {post.data.tags && post.data.tags.length > 0 && (
              <div class="post-tags">
                {post.data.tags.map((tag) => (
                  <span class="tag">#{tag}</span>
                ))}
              </div>
            )}
            
            <a href={`/posts/${post.slug}`} class="read-more">Read More →</a>
          </article>
        ))}
      </div>
    ) : (
      <div class="no-posts">
        <p>No posts published yet. Check back soon!</p>
      </div>
    )}
    
    <div class="blog-link">
      <a href="/posts" class="cta-link">View All Posts →</a>
    </div>
  </div>
</section>

<style>
  .section-title {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--color-text);
  }

  .posts-grid {
    display: grid;
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .post-card {
    padding: 1.5rem;
    border: 1px solid var(--color-border);
    border-radius: 8px;
    background-color: var(--color-bg);
    transition: var(--transition-hover), box-shadow 0.2s ease;
  }

  .post-card:hover {
    border-color: var(--color-accent);
    box-shadow: 0 4px 12px var(--color-shadow-light);
  }

  .post-header {
    margin-bottom: 1rem;
  }

  .post-title {
    margin: 0 0 0.5rem 0;
    font-size: 1.25rem;
    font-weight: 600;
  }

  .post-title a {
    color: var(--color-text);
    text-decoration: none;
    transition: var(--transition-hover);
  }

  .post-title a:hover {
    color: var(--color-accent);
  }

  .post-meta {
    color: var(--color-text-muted);
    font-size: 0.9rem;
  }

  .post-excerpt {
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin-bottom: 1rem;
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .tag {
    color: var(--color-accent);
    font-size: 0.85rem;
    font-weight: 500;
  }

  .read-more {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 600;
    font-size: 0.9rem;
    transition: var(--transition-hover);
  }

  .read-more:hover {
    color: var(--color-accent-hover);
  }

  .no-posts {
    text-align: center;
    padding: 3rem 0;
    color: var(--color-text-secondary);
  }

  .blog-link {
    text-align: center;
    margin-top: 2rem;
  }

  .cta-link {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 600;
    padding: 0.75rem 1.5rem;
    border: 1px solid var(--color-accent);
    border-radius: 6px;
    display: inline-block;
    transition: var(--transition-hover);
  }

  .cta-link:hover {
    background-color: var(--color-accent);
    color: var(--color-bg);
  }

  @media (min-width: 768px) {
    .posts-grid {
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }
  }
</style>